name: Daily Sync and Keep Alive

on:
  schedule:
    # 毎日日本時間9時に実行
    - cron: '0 0 * * *'  # UTC 0:00 = JST 9:00
    # 6時間ごとにKeep Alive
    - cron: '0 */6 * * *'
  workflow_dispatch:  # 手動実行も可能

jobs:
  sync-orders:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Keep Supabase Alive
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: python keep_alive.py
    
    - name: Sync Orders
      if: github.event.schedule == '0 0 * * *'
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
        RAKUTEN_SERVICE_SECRET: ${{ secrets.RAKUTEN_SERVICE_SECRET }}
        RAKUTEN_LICENSE_KEY: ${{ secrets.RAKUTEN_LICENSE_KEY }}
        PRODUCT_MASTER_SPREADSHEET_ID: ${{ secrets.PRODUCT_MASTER_SPREADSHEET_ID }}
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
      run: |
        python -c "
        import asyncio
        from main import app
        from api.rakuten_api import RakutenAPI
        
        async def sync():
            api = RakutenAPI()
            orders = await api.sync_recent_orders(days=1)
            print(f'同期完了: {len(orders)}件')
        
        asyncio.run(sync())
        "